import random
import time

def insertion_sort(arr):
    start_time = time.time()  # Записываем текущее время перед началом сортировки
    for i in range(1, len(arr)):# Проходим по массиву, начиная со второго элемента
        key = arr[i]# Запоминаем текущий элемент
        j = i - 1# Устанавливаем указатель на предыдущий элемент
        while j >= 0 and arr[j] > key:# Пока предыдущий элемент находится в массиве и больше текущего элемента
            arr[j + 1] = arr[j]# Сдвигаем элементы вправо
            j -= 1# Переходим к предыдущему элементу
        arr[j + 1] = key# Вставляем текущий элемент на его правильную позицию
    return time.time() - start_time  # Возвращаем время выполнения сортировки

sizes = [10, 100, 1000, 10000, 100000]# Размеры массивов для сортировки
results = []# Список для хранения результатов

print("| № | Кол-во элементов | Время выполнения |") # Это строка, которая содержит названия столбцов таблицы
print("|---|-----------------|-----------------|") # Это строка-разделитель, которая отделяет заголовки столбцов от данных
# Переменная i используется для вывода номера текущей итерации в таблице
i = 0# Инициализируем переменную `i` со значением 0
for size in sizes:# Начинаем цикл, который будет выполняться для каждого элемента в списке sizes
    arr = [random.randint(0, 100) for _ in range(size)]  # Создаем случайный список
    time_taken = insertion_sort(arr)  # Выполняем сортировку и получаем время выполнения
    results.append((size, time_taken))  # Добавляем результат в список
    print(f"| {i+1} | {size} | {time_taken} |")# Выводим информацию о текущем размере списка
    i += 1# Увеличиваем значение `i` на 1 перед следующей итерацией цикла